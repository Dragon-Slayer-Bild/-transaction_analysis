from src.utils import currency_convert,stock_price
from unittest.mock import Mock,patch

transactions_list_test = [{
        "Дата операции": "04.01.2018 15:00:41",
        "Статус": "OK",
        "Категория": "Каршеринг",
        "Номер карты": "*7199",
        "Сумма операции": 1025.0,
        "Сумма платежа": 1025.0,
        "Описание": "Оплата денег",
        "Кэшбэк": 'nan',
        "Бонусы (включая кэшбэк)": 20,
    },
    {
        "Дата операции": "04.01.2018 15:00:41",
        "Статус": "OK",
        "Категория": "Каршеринг",
        "Номер карты": "*7199",
        "Сумма операции": -25.0,
        "Сумма платежа": -25.0,
        "Кэшбэк": 'nan',
        "Бонусы (включая кэшбэк)": 20,
    },
    {
        "Дата операции": "04.01.2018 14:05:08",
        "Статус": "OK",
        "Категория": "Каршеринг",
        "Номер карты": "*7197",
        "Сумма операции": -1065.9,
        "Сумма платежа": -1065.9,
        "Кэшбэк": 'nan',
        "Бонусы (включая кэшбэк)": 21,
    },
    {
        "Дата операции": "03.01.2018 15:03:35",
        "Статус": "OK",
        "Категория": "Каршеринг",
        "Номер карты": "*7197",
        "Сумма операции": -73.06,
        "Сумма платежа": -73.06,
        "Описание": "Перевод денег",
        "Кэшбэк": 'nan',
        "Бонусы (включая кэшбэк)": 1,
    },
    {
        "Дата операции": "03.01.2018 14:55:21",
        "Статус": "OK",
        "Категория": "Каршеринг",
        "Номер карты": "*7197",
        "Сумма операции": -21.0,
        "Сумма платежа": -21.0,
        "Описание": "Оплата за товар",
        "Кэшбэк": 'nan',
        "Бонусы (включая кэшбэк)": 0,
    },
    {
        "Дата операции": "01.01.2018 20:27:51",
        "Статус": "OK",
        "Категория": "Каршеринг",
        "Номер карты": "*7197",
        "Сумма операции": -316.0,
        "Сумма платежа": -316.0,
        "Описание": "Перевод денег",
        "Кэшбэк": 'nan',
        "Бонусы (включая кэшбэк)": 6,
    },
    {
        "Дата операции": "01.01.2018 12:49:53",
        "Статус": "Failed",
        "Категория": "Каршеринг",
        "Номер карты": 'nan',
        "Сумма операции": -3000.0,
        "Сумма платежа": -3000.0,
        "Описание": "Перевод денег",
        "Кэшбэк": 'nan',
        "Бонусы (включая кэшбэк)": 0,
    }]


@patch('requests.request')
def test_currency_convert(mock_get):
    mock_json_result = {'success': True, 'query': {'from': 'USD', 'to': 'RUB', 'amount': 100}, 'info': {'timestamp': 1745788084, 'quote': 82.589353}, 'result': 8258.9353}

    mock_json = Mock(return_value=mock_json_result)
    mock_get.return_value.json = mock_json
    mock_get.return_value.status_code = 200


    # Вызываем функцию currency_convert
    result = currency_convert("USD", 100)
    assert result == 8258.94


@patch('requests.get')
def test_stock_price(mock_get):

    mock_json_result = {"p": 156.3}

    mock_json = Mock(return_value=mock_json_result)
    mock_get.return_value.json = mock_json
    mock_get.return_value.status_code = 200


    # Вызываем функцию currency_convert
    result = stock_price()
    expected =[{'price': 156.3, 'stock': 'AAPL'},
     {'price': 156.3, 'stock': 'GOOG'},
     {'price': 156.3, 'stock': 'TSLA'}]
    assert result == expected





# transactions_list_test = [
#     {
#         "Дата операции": "04.01.2018 15:00:41",
#         "Статус": "OK",
#         "Номер карты": "*7199",
#         "Сумма операции": 1025.0,
#         "Сумма платежа": 1025.0,
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 20,
#     },
#     {
#         "Дата операции": "04.01.2018 15:00:41",
#         "Статус": "OK",
#         "Номер карты": "*7199",
#         "Сумма операции": -25.0,
#         "Сумма платежа": -25.0,
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 20,
#     },
#     {
#         "Дата операции": "04.01.2018 14:05:08",
#         "Статус": "OK",
#         "Номер карты": "*7197",
#         "Сумма операции": -1065.9,
#         "Сумма платежа": -1065.9,
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 21,
#     },
#     {
#         "Дата операции": "03.01.2018 15:03:35",
#         "Статус": "OK",
#         "Номер карты": "*7197",
#         "Сумма операции": -73.06,
#         "Сумма платежа": -73.06,
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 1,
#     },
#     {
#         "Дата операции": "03.01.2018 14:55:21",
#         "Статус": "OK",
#         "Номер карты": "*7197",
#         "Сумма операции": -21.0,
#         "Сумма платежа": -21.0,
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 0,
#     },
#     {
#         "Дата операции": "01.01.2018 20:27:51",
#         "Статус": "OK",
#         "Номер карты": "*7197",
#         "Сумма операции": -316.0,
#         "Сумма платежа": -316.0,
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 6,
#     },
#     {
#         "Дата операции": "01.01.2018 12:49:53",
#         "Статус": "Failed",
#         "Номер карты": 'nan',
#         "Сумма операции": -3000.0,
#         "Сумма платежа": -3000.0,
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 0,
#     },
# ]
#




# # responce = [{'success': True, 'terms': 'https://currencylayer.com/terms',
# #       'privacy': 'https://currencylayer.com/privacy', 'timestamp': 1745528704, 'source': 'USD',
# #       'quotes': {'USDRSD': 102.936075, 'USDRUB': 83.211592, 'USDRWF': 1426.984496}},
# #      {'success': True, 'terms': 'https://currencylayer.com/terms',
# #       'privacy': 'https://currencylayer.com/privacy', 'timestamp': 1745528704, 'source': 'EUR',
# #       'quotes': {'EURRSD': 102.936075, 'EURRUB': 99.211592, 'EURRWF': 1426.984496}}]
# # for t in responce:
# #     for currency, rate in t.get('quotes').items():
# #         val = currency[3:]
# #         if 'RUB' == val:
# #             quotes.append({"currency":currency[:3],"rate": rate})
#
#
# print(json.dumps({'greeting': greeting(),'cards': card_list(transactions_list), 'top_transactions': get_top_transactions(transactions_list), "currency_rates":currency_list(), "stock_prices": get_stock_price()}, indent=4, ensure_ascii=False))
#
# Пример использования (в другом файле или в этом же для демонстрации)
# if __name__ == '__main__':
#     # Создаем пример датафрейма
#     data = [{
#         "Дата операции": "04.01.2018 15:00:41",
#         "Статус": "OK",
#         "Категория": "Каршеринг",
#         "Номер карты": "*7199",
#         "Сумма операции": 1025.0,
#         "Сумма платежа": 1025.0,
#         "Описание": "Оплата денег",
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 20,
#     },
#     {
#         "Дата операции": "04.01.2018 15:00:41",
#         "Статус": "OK",
#         "Категория": "Каршеринг",
#         "Номер карты": "*7199",
#         "Сумма операции": -25.0,
#         "Сумма платежа": -25.0,
#         "Описание": "Оплата денег",
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 20,
#     },
#     {
#         "Дата операции": "04.01.2018 14:05:08",
#         "Статус": "OK",
#         "Категория": "Каршеринг",
#         "Номер карты": "*7197",
#         "Сумма операции": -1065.9,
#         "Сумма платежа": -1065.9,
#         "Описание": "Оплата денег",
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 21,
#     },
#     {
#         "Дата операции": "03.01.2018 15:03:35",
#         "Статус": "OK",
#         "Категория": "Каршеринг",
#         "Номер карты": "*7197",
#         "Сумма операции": -73.06,
#         "Сумма платежа": -73.06,
#         "Описание": "Перевод денег",
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 1,
#     },
#     {
#         "Дата операции": "03.01.2018 14:55:21",
#         "Статус": "OK",
#         "Категория": "Каршеринг",
#         "Номер карты": "*7197",
#         "Сумма операции": -21.0,
#         "Сумма платежа": -21.0,
#         "Описание": "Оплата за товар",
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 0,
#     },
#     {
#         "Дата операции": "01.01.2018 20:27:51",
#         "Статус": "OK",
#         "Категория": "Каршеринг",
#         "Номер карты": "*7197",
#         "Сумма операции": -316.0,
#         "Сумма платежа": -316.0,
#         "Описание": "Перевод денег",
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 6,
#     },
#     {
#         "Дата операции": "01.01.2018 12:49:53",
#         "Статус": "Failed",
#         "Категория": "Каршеринг",
#         "Номер карты": 'nan',
#         "Сумма операции": -3000.0,
#         "Сумма платежа": -3000.0,
#         "Описание": "Перевод денег",
#         "Кэшбэк": 'nan',
#         "Бонусы (включая кэшбэк)": 0,
#     }]
#
#     df = pd.DataFrame(data)
#
#     # Пример вызова функции с датой
#     spending_report = spending_by_category(df, 'Каршеринг', '2018-01-04') #Указываем дату в формате ГГГГ-ММ-ДД
#     print("Отчет по тратам (Каршеринг, с датой):")
#     print(spending_report)